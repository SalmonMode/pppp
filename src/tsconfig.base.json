{
  "compilerOptions": {
    "target": "es2018" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */,
    "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
    "lib": [
      /* Specify library files to be included in the compilation. */
      "es2018",
      "dom"
    ],
    "jsx": "preserve" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
    "jsxImportSource": "@emotion/react",
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "declarationMap": true /* Generates corresponding '.d.ts' file. */,
    "sourceMap": true /* Generates corresponding '.map' file. */,
    "outDir": "../dist" /* Redirect output structure to the directory. */,
    "rootDir": "./" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
    "removeComments": false /* Do not emit comments to output. */,
    "importHelpers": true /* Import emit helpers from 'tslib'. */,
    "isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* Enable strict null checks. */,
    "strictFunctionTypes": true /* Enable strict checking of function types. */,
    "strictPropertyInitialization": true /* Enable strict checking of property initialization in classes. */,
    "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
    "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,
    "noUnusedLocals": false /* Report errors on unused locals. */,
    "noUnusedParameters": false /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
    "noUncheckedIndexedAccess": true,
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "typeRoots": [
      "./node_modules/@types",
      "./src/types"
    ] /* List of folders to include type definitions from. */,
    "types": [
      "mocha"
    ] /* Type declaration files to be included in compilation. */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "forceConsistentCasingInFileNames": true,
    "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
    "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,
    "incremental": true,
    "resolveJsonModule": true,
    "allowJs": true,
    "skipLibCheck": true,
    "importsNotUsedAsValues": "error",
    "composite": true,
    "baseUrl": ".",
    "paths": {
      "@typing": ["types"],
      "@typing/*": ["types/*"],
      "@errors": ["errors/Error"],
      "@matrix": ["matrix/Matrix"],
      "@TaskUnit": ["TaskUnit/TaskUnit"],
      "@Relations": ["Relations"],
      "@Relations/*": ["Relations/*"],
      "@service/*": ["service/*"],
      "@graphing/*": ["Graphing/*"],
      "@testing/TestRenderers": ["service/Utility/TestRenderers"]
    }
  },
  "include": ["."],
  "exclude": ["node_modules", "./src/dist"]
}
